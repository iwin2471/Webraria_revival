{
  "version": 3,
  "sources": ["../src/js/engine/canvas.ts", "../src/js/player/Position.mts", "../src/js/player/base_player.ts", "../src/js/player/user_player.mts", "../src/js/engine/world/tilemap.ts", "../src/js/engine/player_controll.ts", "../src/js/utils/perlin.ts", "../src/js/engine/world/worldgen.ts", "../src/js/engine/world/world.ts", "../src/js/engine/game.ts", "../src/js/index.ts"],
  "sourcesContent": ["export default class Canvas {\r\n  private element: HTMLCanvasElement;\r\n  private context: WebGL2RenderingContext;\r\n  private static instance: Canvas;\r\n  private constructor() {}\r\n\r\n  public static getInstance() {\r\n    if (this.instance == null) {\r\n      this.instance = new Canvas();\r\n    }\r\n    return this.instance;\r\n  }\r\n\r\n  //TODO:\r\n  //\uAC8C\uC784 \uCE74\uBA54\uB77C \uB4F1 \uC124\uC815 \uBAA8\uB450 \uB2E4 \uC62E\uAE30\uAE30\r\n  //\uC2A4\uD0C0\uB4C0, \uC0CC\uB4DC\uBC15\uC2A4, \uD14C\uB77C\uB9AC\uC544, \uB178\uB9E8\uC2A4\uC2A4\uCE74\uC774, \uAD74\uCC29\uAE30\r\n  public initElement(canvasId: string) {\r\n    this.element = document.getElementById(canvasId) as HTMLCanvasElement;\r\n    this.context = this.element.getContext(\"webgl2\");\r\n    this.element.height = this.element.clientHeight;\r\n    this.element.width = this.element.clientWidth;\r\n  }\r\n\r\n  public getContext() {\r\n    return this.context;\r\n  }\r\n\r\n  public getElement() {\r\n    return this.element;\r\n  }\r\n}\r\n", "export default class Position {\r\n  x: number;\r\n  y: number;\r\n\r\n  constructor();\r\n  constructor(x?: number, y?: number) {\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n\r\n  public setXY(x: number, y: number) {\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n\r\n  public toString() {\r\n    return `${this.x} ${this.y}`\r\n  }\r\n}\r\n", "import Position from \"./Position.mts\";\r\nimport Behavior from \"../engine/behaviorable\";\r\nimport Movable from \"./movable\";\r\nimport Drawable from \"../engine/drawable\";\r\nimport Canvas from \"../engine/canvas\";\r\n\r\nexport default abstract class BasePlayer implements Movable, Drawable, Behavior {\r\n  name: String;\r\n  sprite: HTMLImageElement = new Image();\r\n  loaded: boolean = false;\r\n  movementSpeed: number = 8;\r\n  canJump: boolean = false;\r\n  readonly position: Position = new Position();\r\n  readonly width: number = 8;\r\n  readonly height: number = 16;\r\n\r\n  constructor(name: string, spriteURL: string) {\r\n    this.name = name;\r\n    this.sprite.src = spriteURL;\r\n\r\n    this.sprite.onload = () => {\r\n      this.loaded = true;\r\n    };\r\n  }\r\n  get speed(): number {\r\n    return this.movementSpeed;\r\n  }\r\n\r\n  public setPosition(x: number, y: number) {\r\n    this.position.setXY(x, y);\r\n  }\r\n\r\n  public get x(): number {\r\n    return this.position.x;\r\n  }\r\n\r\n  public get y(): number {\r\n    return this.position.y;\r\n  }\r\n\r\n  public clearRect(): void {\r\n    Canvas.getInstance()\r\n      .getContext()\r\n      .clearRect(this.x, this.y, this.width, this.height);\r\n  }\r\n\r\n  protected isMonster(): boolean {\r\n    return false;\r\n  }\r\n\r\n  onUpdate(): void {\r\n    return;\r\n  }\r\n}\r\n", "import BasePlayer from \"./base_player\";\r\n\r\nexport default class UserPlayer extends BasePlayer {\r\n  sideMovementSpeed: number = 8;\r\n  jumpForce: number = 16;\r\n\r\n  constructor(playerName: string, spriteSrc: string) {\r\n    super(playerName, spriteSrc);\r\n  }\r\n\r\n  onUpdate(): void {\r\n     \r\n  }\r\n}\r\n", "import Canvas from \"../canvas\";\r\n\r\nexport default class Terrain {\r\n  private static instance: Terrain;\r\n  public worldTerrainSave: Array<Array<Boolean>> = new Array();\r\n  static readonly tileSize = 8;\r\n  readonly tileMap: object = {\r\n    tile: {\r\n      dirt: [new Image(), new Image(), new Image(), new Image()],\r\n      water: [new Image(), new Image(), new Image(), new Image()],\r\n    },\r\n    ore: [new Image(), new Image(), new Image(), new Image(), new Image()],\r\n  };\r\n\r\n  private constructor() {\r\n    //Dirt Images\r\n    this.tileMap[\"tile\"][\"dirt\"][0].src =\r\n      \"Resource/Tiles/dirt/floor_dirt01.png\";\r\n    this.tileMap[\"tile\"][\"dirt\"][1].src =\r\n      \"Resource/Tiles/dirt/floor_dirt02.png\";\r\n    this.tileMap[\"tile\"][\"dirt\"][2].src =\r\n      \"Resource/Tiles/dirt/floor_dirt03.png\";\r\n    this.tileMap[\"tile\"][\"dirt\"][3].src =\r\n      \"Resource/Tiles/dirt/floor_dirt04.png\";\r\n\r\n    //Water Images\r\n    this.tileMap[\"tile\"][\"water\"][0].src =\r\n      \"Resource/Tiles/liquid/water_opacity_90.png\";\r\n    this.tileMap[\"tile\"][\"water\"][0].src =\r\n      \"Resource/Tiles/liquid/water_opacity_95.png\";\r\n    this.tileMap[\"tile\"][\"water\"][0].src =\r\n      \"Resource/Tiles/liquid/water_surface_opacity_90.png\";\r\n    this.tileMap[\"tile\"][\"water\"][0].src =\r\n      \"Resource/Tiles/liquid/water_surface_opacity_95.png\";\r\n\r\n    //Object Images\r\n    this.tileMap[\"ore\"][0].src = \"Resource/Tiles/Mineral/copperS.png\";\r\n    this.tileMap[\"ore\"][1].src = \"Resource/Tiles/Mineral/iro.png\";\r\n    this.tileMap[\"ore\"][2].src = \"Resource/Tiles/Mineral/dia2.png\";\r\n    this.tileMap[\"ore\"][3].src = \"Resource/Tiles/object/stone.png\";\r\n    this.tileMap[\"ore\"][4].src = \"Resource/Tiles/dirt/floor_dirt04.png\";\r\n\r\n    for (let i = 0; i < Canvas.getInstance().getElement().width; i++) {\r\n      this.worldTerrainSave[i] = new Array();\r\n    }\r\n  }\r\n\r\n  public static getInstance() {\r\n    if(this.instance == null) {\r\n      this.instance = new Terrain()\r\n    }\r\n    return this.instance;\r\n  }\r\n}\r\n", "import Behavior from \"./behaviorable\";\r\nimport Canvas from \"./canvas\";\r\nimport BasePlayer from \"../player/base_player\";\r\nimport Terrain from \"./world/tilemap\";\r\n\r\nexport default class PlayerControll implements Behavior {\r\n  private canvas = Canvas.getInstance();\r\n  private element = this.canvas.getElement();\r\n  private context = this.canvas.getContext();\r\n  private playerList = new Array<BasePlayer>();\r\n\r\n  onMainPlayerEnter(player: BasePlayer) {\r\n    this.canvas = Canvas.getInstance();\r\n    this.element = this.canvas.getElement();\r\n    this.context = this.canvas.getContext();\r\n    window.addEventListener(\"keydown\", ({ code }) => this.movement(player, code));\r\n    window.addEventListener(\"keyup\", this.onKeyUp);\r\n    this.onWorldEnter(player);\r\n  }\r\n\r\n  onWorldEnter(player: BasePlayer) {\r\n    this.playerList.push(player);\r\n  }\r\n\r\n  movement(player, code) {\r\n    switch (code) {\r\n      case \"ArrowLeft\":\r\n        if (\r\n          !Terrain.getInstance().worldTerrainSave[player.position.x - player.speed][\r\n            player.position.y\r\n          ]\r\n        ) {\r\n          player.clearRect();\r\n          player.position.x -= player.speed;\r\n        }\r\n        break;\r\n      case \"Space\":\r\n      case \"ArrowUp\":\r\n        if (!player.canJump) break;\r\n        player.clearRect();\r\n        player.position.y -= player.jumpForce;\r\n        player.canJump = false;\r\n        break;\r\n      case \"ArrowRight\":\r\n        if (\r\n          !Terrain.getInstance().worldTerrainSave[player.position.x + player.speed][\r\n            player.position.y\r\n          ]\r\n        ) {\r\n          player.clearRect();\r\n          player.position.x += player.speed;\r\n        }\r\n        break;\r\n      case \"ArrowDown\":\r\n        player.clearRect();\r\n        player.position.y += player.jumpForce;\r\n        break;\r\n    }\r\n  }\r\n\r\n  onKeyUp({ keyCode, type }) {}\r\n\r\n  \r\n  onUpdate(frame): void {\r\n    this.playerList.forEach((player) => {\r\n      player.clearRect();\r\n      // console.log(lastLayer[Math.floor(player.xPos / 8)].toString());\r\n\r\n      if (\r\n        !Terrain.getInstance().worldTerrainSave[player.position.x][player.position.y + 16]\r\n      ) {\r\n        player.position.y += 2;\r\n      } else {\r\n        player.canJump = true;\r\n      }\r\n\r\n      this.context.rect(\r\n        player.position.y,\r\n        player.position.y,\r\n        player.width,\r\n        player.height\r\n      );\r\n      this.context.fillStyle = \"rgba(0,0,0,0)\";\r\n      this.context.fill();\r\n\r\n      this.context.drawImage(\r\n        player.sprite,\r\n        player.position.x,\r\n        player.position.y,\r\n        player.width,\r\n        player.height\r\n      );\r\n    });\r\n    //console.log(\"Player Drawn Loc X : \" + player.xPos + \" Loc Y : \" + player.yPos + \" CanJump : \" + player.canJump);\r\n    //            console.log(\"Left : \" + worldTerrainSave[player.xPos - 8][player.yPos + 15]);\r\n    //            console.log(\"Right : \" + worldTerrainSave[player.xPos + 8][player.yPos + 15]);\r\n  }\r\n}\r\n", "export default class Perlin {\r\n  psng: PSNG;\r\n  x = 0;\r\n  amp: number;\r\n  wl: number;\r\n  fq: number;\r\n  pos = [];\r\n  a: number;\r\n  b: number;\r\n\r\n  constructor(amp, wl, width) {\r\n    this.amp = amp;\r\n    this.wl = wl;\r\n    this.fq = 1 / wl;\r\n    this.psng = new PSNG();\r\n    this.a = this.psng.next();\r\n    this.b = this.psng.next();\r\n    this.pos = [];\r\n\r\n    while (this.x < width) {\r\n      if (this.x % this.wl === 0) {\r\n        this.a = this.b;\r\n        this.b = this.psng.next();\r\n        this.pos.push(this.a * this.amp);\r\n      } else {\r\n        this.pos.push(\r\n          this.interpolate(this.a, this.b, (this.x % this.wl) / this.wl) *\r\n            this.amp\r\n        );\r\n      }\r\n      this.x++;\r\n    }\r\n  }\r\n\r\n  //cosine interpolation\r\n  interpolate(pa, pb, px) {\r\n    let ft = px * Math.PI;\r\n    let f = (1 - Math.cos(ft)) * 0.5;\r\n    return pa * (1 - f) + pb * f;\r\n  }\r\n\r\n  //octave generator\r\n  generateNoise(amp, wl, octaves, divisor, width) {\r\n    const result = [];\r\n    for (let i = 0; i < octaves; i++) {\r\n      result.push(new Perlin(amp, wl, width));\r\n      amp /= divisor;\r\n      wl /= divisor;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  //combines octaves together\r\n  combineNoise(pl) {\r\n    const pos = [];\r\n    for (let i = 0, total = 0, j = 0; i < pl[0].pos.length; i++) {\r\n      total = 0;\r\n      for (j = 0; j < pl.length; j++) {\r\n        total += pl[j].pos[i];\r\n      }\r\n      pos.push(total);\r\n    }\r\n    return pos;\r\n  }\r\n}\r\n\r\nclass PSNG {\r\n  Z = 0;\r\n  //linear congruential generator parameters\r\n  M = 4294967296;\r\n  A = 1664525;\r\n  C = 1;\r\n\r\n  constructor() {\r\n    this.Z = Math.floor(Math.random() * this.M);\r\n  }\r\n\r\n  next() {\r\n    this.Z = (this.A * this.Z + this.C) % this.M;\r\n    return this.Z / this.M - 0.5;\r\n  }\r\n}\r\n", "import Canvas from \"../canvas\";\r\nimport { Perlin } from \"../../utils/math\";\r\nimport Terrain from \"./tilemap\";\r\n\r\nexport default class WorldGen {\r\n  private canvas: Canvas = Canvas.getInstance();\r\n  private terrain: Terrain;\r\n  cnt = 0;\r\n\r\n  //Polish \uD558\uAE30\r\n  //\uB3D9\uAD74 \uBC0F \uBC14\uB2E4 \uAC15, \uB3CC\uACFC \uC624\uC5B4\r\n  //\uC800\uC7A5\uD558\uB294\uAC70\r\n\r\n  lastLayer = [];\r\n  layerCnt = 0;\r\n\r\n  private makeSomeNoise(): Array<number> {\r\n    const perlin: Perlin = new Perlin(\r\n      128,\r\n      128,\r\n      Canvas.getInstance().getElement().width\r\n    );\r\n    const result = perlin.combineNoise(\r\n      perlin.generateNoise(128, 128, 8, 2, this.canvas.getElement().width)\r\n    );\r\n    return result;\r\n  }\r\n\r\n  public generateWorld() {\r\n    this.terrain = Terrain.getInstance();\r\n    const noises: Array<number> = this.makeSomeNoise();\r\n    const element: HTMLCanvasElement = this.canvas.getElement();\r\n    const context: WebGL2RenderingContext = this.canvas.getContext();\r\n    const terrain: Terrain = Terrain.getInstance();\r\n    let mapHeight = element.height;\r\n    let mapWidth = element.width;\r\n    let height = mapHeight / 2;\r\n    let isTopSet = false;\r\n    // context.clearRect(0, 0, mapWidth, mapHeight);\r\n\r\n    setTimeout(() => {\r\n      for (let i = 0; i < mapWidth; i++) {\r\n        let top = height + noises[i];\r\n        isTopSet = false;\r\n        for (let j = 0; j < mapHeight; j++) {\r\n          terrain.worldTerrainSave[i][j] = false;\r\n\r\n          if (j > top) {\r\n            terrain.worldTerrainSave[i][j] = true;\r\n\r\n            if (i % Terrain.tileSize == 0 && j % Terrain.tileSize == 0) {\r\n              if (!isTopSet) {\r\n                let randomTop = Math.floor(Math.random() * 3);\r\n                context.drawImage(\r\n                  this.terrain.tileMap[\"tile\"][\"dirt\"][randomTop],\r\n                  i,\r\n                  j\r\n                );\r\n                isTopSet = true;\r\n              } else {\r\n                context.drawImage(\r\n                  this.terrain.tileMap[\"tile\"][\"dirt\"][3],\r\n                  i,\r\n                  j\r\n                );\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }, 500);\r\n  }\r\n}\r\n", "import WorldGen from \"./worldgen\";\r\n\r\nexport default class World {\r\n  private worldgen: WorldGen = new WorldGen();\r\n  public terrainSave: object;\r\n\r\n  constructor() {}\r\n\r\n  public generateWorld() {\r\n    this.worldgen.generateWorld();\r\n  }\r\n}\r\n", "import Player from \"../player/user_player.mts\";\r\nimport PlayerControll from \"./player_controll\";\r\nimport World from \"./world/world\";\r\nimport Canvas from \"./canvas\";\r\nimport Terrain from \"./world/tilemap\";\r\nimport Behavior from \"./behaviorable\";\r\n\r\nexport default class Game {\r\n  private canvas = Canvas.getInstance();\r\n  private element = this.canvas.getElement();\r\n  private context = this.canvas.getContext();\r\n  private world = new World();\r\n  private frame = 0;\r\n  private terrian;\r\n  private test = new PlayerControll();\r\n  private readonly registeredControllers: Array<Behavior> = new Array<Behavior>(this.test)\r\n  elemLeft: number;\r\n  elemTop: number;\r\n\r\n  startGame(name: string) {\r\n    const player = new Player(name, \"Resource/Character/3.png\");\r\n    this.terrian = Terrain.getInstance();\r\n    this.canvas = Canvas.getInstance();\r\n    this.element = this.canvas.getElement();\r\n    this.context = this.canvas.getContext();\r\n    this.elemLeft = this.element.offsetLeft + this.element.clientLeft;\r\n    this.elemTop = this.element.offsetTop + this.element.clientTop;\r\n    this.element.onclick = ({ clientX, clientY }) => {\r\n      const x = clientX - this.element.getBoundingClientRect().left;\r\n      const y = clientY - this.element.getBoundingClientRect().top;\r\n      console.log(x,y);\r\n\r\n      console.log(this.terrian.worldTerrainSave[x][y]);\r\n    };\r\n \r\n    player.setPosition(0, 0);\r\n    this.test.onMainPlayerEnter(player);\r\n    this.world.generateWorld();\r\n    this.onUpdate(this.frame);\r\n  }\r\n\r\n  private onUpdate(frame:number): void {\r\n    this.frame = frame\r\n    this.registeredControllers.forEach(controller => {\r\n      controller.onUpdate(frame);\r\n    });\r\n\r\n    window.requestAnimationFrame(() => this.onUpdate(++frame));\r\n  }\r\n}\r\n\r\n", "import Canvas from \"./engine/canvas\";\r\nimport Game from \"./engine/game\";\r\n\r\nfunction init() {\r\n  const game = new Game();\r\n  Canvas.getInstance().initElement(\"main_canvas\");\r\n  game.startGame(\"Johnsu\");\r\n}\r\n\r\ninit();\r\n"],
  "mappings": "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",
  "names": []
}
